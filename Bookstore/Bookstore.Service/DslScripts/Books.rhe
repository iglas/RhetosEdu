
Module Bookstore
{
    Entity Book
    {
        ShortString Code { AutoCode; }
        ShortString Title;
        Integer NumberOfPages;

        ItemFilter CommonMisspelling 'book => book.Title.Contains("curiousity")';
        InvalidData CommonMisspelling 'It is not allowed to enter misspelled word "curiousity".';

        Logging;
        DateTime Created {CreationTime;}

        DateTime TitleChangeTime { ModificationTimeOf Bookstore.Book.Title;}

        Reference Author Bookstore.Person;
        Reference Genre;
    }

    Entity Person
    {
        ShortString Name;
    }

    Entity Comment
    {
        Reference Book {Detail; }
        LongString Text;
    }

    Entity ChildrensBook
    {
        Extends Bookstore.Book;

        Integer AgeFrom;
        Integer AgeTo;
        IntegerRange AgeFrom AgeTo;
    }

    Entity ForeignBook
    {
        Extends Bookstore.Book;

        ShortString OriginalLanguage;
        Reference Translator Bookstore.Person;
    }

    Entity Topic
    {
        ShortString Name { Unique; Required; }

        ItemFilter IsAdminTopic 'item => item.Name == "Admin"';
        Lock IsAdminTopic 'Cannot change Admin topic';

        Logging { AllProperties; }

        Deactivatable;
    }

    Entity BookTopic
    {
        Reference Book { Detail; }
        Reference Topic { Required; }

        UniqueMultiple 'Book Topic';
    }

    Entity Shipment
    {
        Reference Book { Required; }
        ShortString Address;
        DateTime Created { CreationTime; }
    }
    
    Entity ApproveShipment
    {
        DateTime EffectiveSince { CreationTime; }
        Reference Shipment;

        Is Bookstore.ShipmentEvent
        {
            Implements Bookstore.ShipmentEvent.NewStatus Bookstore.ShipmentStatus.Approved;

            // Slower alternative: Calling the database function:
            //Implements Bookstore.ShipmentEvent.NewStatus "Bookstore.ShipmentStatus_Approved()";
        }
    }
}



//Module Bookstore;
//Entity Bookstore.Book;
//ShortString Bookstore.Book.Code { AutoCode; }
//ShortString Bookstore.Book.Title;
//Integer Bookstore.Book.NumberOfPages;

//ItemFilter Bookstore.Book.CommonMisspelling 'book => book.Title.Contains("curiousity")';
//InvalidData Bookstore.Book.CommonMisspelling 'It is not allowed to enter misspelled word "curiousity".';

//Logging Bookstore.Book;
